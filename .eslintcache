[{"C:\\Users\\karab\\Desktop\\ElevenFiftyProjects\\project72hour\\project72hour\\src\\index.js":"1","C:\\Users\\karab\\Desktop\\ElevenFiftyProjects\\project72hour\\project72hour\\src\\reportWebVitals.js":"2","C:\\Users\\karab\\Desktop\\ElevenFiftyProjects\\project72hour\\project72hour\\src\\App.js":"3","C:\\Users\\karab\\Desktop\\ElevenFiftyProjects\\project72hour\\project72hour\\src\\NASAComponents\\LocationFinder.js":"4","C:\\Users\\karab\\Desktop\\ElevenFiftyProjects\\project72hour\\project72hour\\src\\NASAComponents\\NASA.js":"5","C:\\Users\\karab\\Desktop\\ElevenFiftyProjects\\project72hour\\project72hour\\src\\TktMaster.jsx":"6","C:\\Users\\karab\\Desktop\\ElevenFiftyProjects\\project72hour\\project72hour\\src\\weather\\WeatherParent.jsx":"7","C:\\Users\\karab\\Desktop\\ElevenFiftyProjects\\project72hour\\project72hour\\src\\weather\\WeatherChild.jsx":"8","C:\\Users\\karab\\Desktop\\ElevenFiftyProjects\\project72hour\\project72hour\\src\\TktMasterChild.jsx":"9"},{"size":565,"mtime":1629858567953,"results":"10","hashOfConfig":"11"},{"size":375,"mtime":1629858567953,"results":"12","hashOfConfig":"11"},{"size":2375,"mtime":1630161136953,"results":"13","hashOfConfig":"11"},{"size":253,"mtime":1630159216867,"results":"14","hashOfConfig":"11"},{"size":1265,"mtime":1630159216867,"results":"15","hashOfConfig":"11"},{"size":1576,"mtime":1630162136757,"results":"16","hashOfConfig":"11"},{"size":1372,"mtime":1630159216892,"results":"17","hashOfConfig":"11"},{"size":1573,"mtime":1630160870015,"results":"18","hashOfConfig":"11"},{"size":771,"mtime":1630162464301,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"180mjta",{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},"C:\\Users\\karab\\Desktop\\ElevenFiftyProjects\\project72hour\\project72hour\\src\\index.js",[],"C:\\Users\\karab\\Desktop\\ElevenFiftyProjects\\project72hour\\project72hour\\src\\reportWebVitals.js",[],"C:\\Users\\karab\\Desktop\\ElevenFiftyProjects\\project72hour\\project72hour\\src\\App.js",["44","45","46","47","48","49","50"],"import './App.css';\r\nimport TktMaster from './TktMaster';\r\nimport WeatherParent from './weather/WeatherParent';\r\nimport React, {useState, useEffect} from 'react';\r\nimport LocationFinder from './NASAComponents/LocationFinder';\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  NavbarText,\r\n  Jumbotron,\r\n  Container\r\n} from 'reactstrap';\r\nimport NASA from './NASAComponents/NASA';\r\n\r\nfunction App() {\r\n  const [position, setposition] = useState({ lat: 0, lon: 0 });\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggle = () => setIsOpen(!isOpen);\r\n \r\n\r\n  useEffect(() => {\r\n      navigator.geolocation.getCurrentPosition(success => {\r\n          var lat = success.coords.latitude;\r\n          var lon = success.coords.longitude;\r\n          console.log(lon, lat)\r\n          setposition({lat: lat, lon: lon})\r\n      })\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Navbar color=\"primary\" light expand=\"md\" >\r\n        <NavbarBrand href=\"#nasa\"><h4 className=\"Linktext\">Location</h4></NavbarBrand>\r\n        <NavbarToggler onClick={toggle} />\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <Nav className=\"mr-auto\" navbar>\r\n            <NavItem>\r\n              <NavLink href=\"#tktmaster\"><h4 className=\"Linktext\">Events</h4></NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink href=\"#weather\"><h4 className=\"Linktext\">Weather</h4></NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n        </Collapse>\r\n      </Navbar>\r\n\r\n    <div className=\"Container\">\r\n      <Jumbotron className=\"Jumbotron\">\r\n      </Jumbotron>\r\n    </div>\r\n      \r\n      <div className=\"Body\">\r\n        <img src={require('./images/here.jpg').default} height={400} width={500} className=\"Here\"/>\r\n      \r\n\r\n        <div id=\"nasa\">\r\n        <NASA position={position} />\r\n        </div>\r\n\r\n        <div id=\"tktmaster\">\r\n          \r\n          <Container>\r\n        <TktMaster position={position} />\r\n        </Container>\r\n        </div>\r\n      \r\n      <div className=\"Weather\" id=\"weather\"></div>\r\n      \r\n      \r\n      <WeatherParent position={position} />\r\n      \r\n      </div>\r\n      <footer className=\"Footer\">\r\n        <p>Â© Project 72 Hours</p>\r\n      </footer>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\karab\\Desktop\\ElevenFiftyProjects\\project72hour\\project72hour\\src\\NASAComponents\\LocationFinder.js",["51","52"],"import React, {useState, useEffect} from 'react';\r\nimport NASA from './NASA';\r\n\r\n\r\nconst LocationFinder = (props) => {\r\n    \r\n    return ( \r\n        <div>\r\n            <NASA />\r\n            \r\n        </div>\r\n     );\r\n}\r\n \r\nexport default LocationFinder;","C:\\Users\\karab\\Desktop\\ElevenFiftyProjects\\project72hour\\project72hour\\src\\NASAComponents\\NASA.js",["53"],"import React, {useState, useEffect} from 'react';\r\nimport {} from 'reactstrap';\r\n\r\nlet day = new Date();\r\nvar dd = String(day.getDate()).padStart(2, '0');\r\nvar mm = String(day.getMonth() + 1).padStart(2, '0'); \r\nvar yyyy = day.getFullYear();\r\nlet date = `${yyyy}-${mm-1}-${dd}`\r\nconsole.log(date)\r\n\r\nconst NASA = (props) => {\r\n    const [submit, setSubmit] = useState([]);\r\n    \r\n    const key = 'Z7E5A8YqjoP6Gw65BfND2d2jnsypTLPDtQqYLDGs';\r\n    let long = props.position.lon;\r\n    let lat = props.position.lat;\r\n    let url = `https://api.nasa.gov/planetary/earth/assets?lon=${long}&lat=${lat}&date=${date}&api_key=${key}`\r\n    //https://api.nasa.gov/planetary/earth/assets?lon=-86.262860&lat=39.751219&date=2020-08-21&api_key=Z7E5A8YqjoP6Gw65BfND2d2jnsypTLPDtQqYLDGs\r\n    \r\n    \r\n    useEffect(() => {\r\n        const fetchURL = async() => {\r\n            const response = await fetch(url);\r\n            const data = await response.json();\r\n            setSubmit(data.url)\r\n        };\r\n        fetchURL();\r\n    }, [url]);\r\n   \r\n\r\n    return ( \r\n        <div>\r\n                <div className=\"nasaPic\">\r\n                    <img src={submit} style={{width: \"120px\", height: \"200px\"}}></img>\r\n                </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default NASA;","C:\\Users\\karab\\Desktop\\ElevenFiftyProjects\\project72hour\\project72hour\\src\\TktMaster.jsx",["54","55","56","57","58","59","60","61","62","63","64","65"],"import React, { useState, useEffect } from 'react';\r\nimport {\r\n    Card, Button, CardImg, CardTitle, CardText, CardGroup, CardDeck,\r\n    CardSubtitle, CardBody,Container, Row, Col \r\n  } from 'reactstrap';\r\nimport TktMasterChild from './TktMasterChild';\r\n\r\n\r\n\r\nconst TktMaster = (props) => {\r\nconst [games, setgames] = useState([]);\r\n var latitude = props.position.lat  \r\n var longitude = props.position.lon \r\n\r\n    const handleClick = async() => {\r\n        const url = `https://app.ticketmaster.com/discovery/v2/events.json?apikey=QInF0b7Aa2nMHrALmSHEEq4uwNwr5un8&latlong=${latitude},${longitude}&size=9`;\r\n        const response = await fetch(url);\r\n        const data = await response.json();\r\n        console.log(data._embedded.events);\r\n        setgames(data._embedded.events);\r\n    }\r\n\r\n    \r\n    function displayEvents () {\r\n    return (games.map(game => <TktMasterChild name={game.name} date={game.dates.start.localDate} time={game.dates.start.localTime} price={game.priceRanges[0].min} url={game.url}/>))\r\n\r\n    } \r\n\r\n\r\n    return (\r\n         <div>\r\n             <h1 id=\"tkt-info\">Looking for something to do in your area? Click the button below to find your local events!</h1>\r\n         <div>\r\n             {/* <Container> */}\r\n                 {/* <Row md=\"4\"> */}\r\n\r\n             <CardDeck>\r\n            {displayEvents()}\r\n\r\n             </CardDeck>\r\n            {/* </Row> */}\r\n             {/* </Container> */}\r\n\r\n         </div>\r\n\r\n         <button onClick={handleClick} id=\"get-events\">Click Me</button>\r\n    </div>\r\n     );\r\n\r\n\r\n}\r\n \r\nexport default TktMaster;","C:\\Users\\karab\\Desktop\\ElevenFiftyProjects\\project72hour\\project72hour\\src\\weather\\WeatherParent.jsx",[],"C:\\Users\\karab\\Desktop\\ElevenFiftyProjects\\project72hour\\project72hour\\src\\weather\\WeatherChild.jsx",["66"],"import React, { useState } from 'react';\r\nimport {\r\n  CardText, CardBody,\r\n  CardTitle, CardSubtitle, \r\n} from 'reactstrap';\r\n \r\nconst WeatherChild = (props) => {\r\n    const {temp, feels_like, humidity}=props.temperaturetoday;\r\n    const [newTemperature, setNewTemperature] = useState(false);\r\n    const [getFahrenheit, setGetFahrenheit] = useState(false);\r\n    const convertTemp = () => {\r\n        const temperature = props.temperaturetoday.temp;\r\n        const feelsLike = props.temperaturetoday.feels_like;\r\n        let temperatureFahrenheit = temperature * 1.8 + 32;\r\n        let feelsLikeFahrenheit = feelsLike * 1.8 + 32;\r\n        setNewTemperature (!newTemperature)\r\n        setGetFahrenheit(temperatureFahrenheit);\r\n        console.log(feelsLikeFahrenheit);\r\n    }\r\n    \r\n    // const fahrenheit = () => {\r\n    //   setNewTemperature (!newTemperature)\r\n    // }\r\n\r\n    const changeTemp = () => {\r\n      return <>{getFahrenheit}</>\r\n    }\r\n    \r\n    return ( \r\n        <div>\r\n        \r\n          <button onClick={convertTemp} id=\"change-temp\">Change Temperature</button>\r\n          <CardBody id=\"temp\">{newTemperature ? \"Fahrenheit\" : \"Celsius\"}\r\n            <CardTitle  className=\"text-primary\">Current Temp: {newTemperature ? getFahrenheit : temp }Â°</CardTitle>\r\n            <CardSubtitle className=\"text-primary\">Feels Like: {newTemperature ? getFahrenheit : feels_like}Â°</CardSubtitle>\r\n            <CardText className=\"text-primary\">Humidty is {humidity}.</CardText>\r\n          </CardBody>\r\n        \r\n      </div> \r\n     );\r\n}\r\n \r\nexport default WeatherChild;","C:\\Users\\karab\\Desktop\\ElevenFiftyProjects\\project72hour\\project72hour\\src\\TktMasterChild.jsx",["67","68","69","70"],"import React, { useState, useEffect } from 'react';\r\nimport {\r\n    Card, Button, CardImg, CardTitle, CardText, CardGroup,\r\n    CardSubtitle, CardBody, Col\r\n  } from 'reactstrap';\r\n\r\nconst TktMasterChild = (props) => {\r\n    return (\r\n         <div id=\"cards\">\r\n        <Col lg=\"10\">\r\n         <Card style={{width: '18rem'}}>\r\n         <CardBody>\r\n           <CardTitle tag=\"h5\">{props.name}</CardTitle>\r\n           <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">${props.price}</CardSubtitle>\r\n           <CardText>{props.date} - {props.time}pm </CardText>\r\n           <Button href={props.url} target=\"_blank\" id=\"tktmaster-button\">Buy Tickets</Button>\r\n         </CardBody>\r\n       </Card>\r\n       </Col>\r\n\r\n             </div> );\r\n}\r\n \r\nexport default TktMasterChild;",{"ruleId":"71","severity":1,"message":"72","line":5,"column":8,"nodeType":"73","messageId":"74","endLine":5,"endColumn":22},{"ruleId":"71","severity":1,"message":"75","line":14,"column":3,"nodeType":"73","messageId":"74","endLine":14,"endColumn":23},{"ruleId":"71","severity":1,"message":"76","line":15,"column":3,"nodeType":"73","messageId":"74","endLine":15,"endColumn":17},{"ruleId":"71","severity":1,"message":"77","line":16,"column":3,"nodeType":"73","messageId":"74","endLine":16,"endColumn":15},{"ruleId":"71","severity":1,"message":"78","line":17,"column":3,"nodeType":"73","messageId":"74","endLine":17,"endColumn":15},{"ruleId":"71","severity":1,"message":"79","line":18,"column":3,"nodeType":"73","messageId":"74","endLine":18,"endColumn":13},{"ruleId":"80","severity":1,"message":"81","line":63,"column":9,"nodeType":"82","endLine":63,"endColumn":100},{"ruleId":"71","severity":1,"message":"83","line":1,"column":16,"nodeType":"73","messageId":"74","endLine":1,"endColumn":24},{"ruleId":"71","severity":1,"message":"84","line":1,"column":26,"nodeType":"73","messageId":"74","endLine":1,"endColumn":35},{"ruleId":"80","severity":1,"message":"81","line":34,"column":21,"nodeType":"82","endLine":34,"endColumn":81},{"ruleId":"71","severity":1,"message":"84","line":1,"column":27,"nodeType":"73","messageId":"74","endLine":1,"endColumn":36},{"ruleId":"71","severity":1,"message":"85","line":3,"column":5,"nodeType":"73","messageId":"74","endLine":3,"endColumn":9},{"ruleId":"71","severity":1,"message":"86","line":3,"column":11,"nodeType":"73","messageId":"74","endLine":3,"endColumn":17},{"ruleId":"71","severity":1,"message":"87","line":3,"column":19,"nodeType":"73","messageId":"74","endLine":3,"endColumn":26},{"ruleId":"71","severity":1,"message":"88","line":3,"column":28,"nodeType":"73","messageId":"74","endLine":3,"endColumn":37},{"ruleId":"71","severity":1,"message":"89","line":3,"column":39,"nodeType":"73","messageId":"74","endLine":3,"endColumn":47},{"ruleId":"71","severity":1,"message":"90","line":3,"column":49,"nodeType":"73","messageId":"74","endLine":3,"endColumn":58},{"ruleId":"71","severity":1,"message":"91","line":4,"column":5,"nodeType":"73","messageId":"74","endLine":4,"endColumn":17},{"ruleId":"71","severity":1,"message":"92","line":4,"column":19,"nodeType":"73","messageId":"74","endLine":4,"endColumn":27},{"ruleId":"71","severity":1,"message":"93","line":4,"column":28,"nodeType":"73","messageId":"74","endLine":4,"endColumn":37},{"ruleId":"71","severity":1,"message":"94","line":4,"column":39,"nodeType":"73","messageId":"74","endLine":4,"endColumn":42},{"ruleId":"71","severity":1,"message":"95","line":4,"column":44,"nodeType":"73","messageId":"74","endLine":4,"endColumn":47},{"ruleId":"71","severity":1,"message":"96","line":25,"column":11,"nodeType":"73","messageId":"74","endLine":25,"endColumn":21},{"ruleId":"71","severity":1,"message":"83","line":1,"column":17,"nodeType":"73","messageId":"74","endLine":1,"endColumn":25},{"ruleId":"71","severity":1,"message":"84","line":1,"column":27,"nodeType":"73","messageId":"74","endLine":1,"endColumn":36},{"ruleId":"71","severity":1,"message":"87","line":3,"column":19,"nodeType":"73","messageId":"74","endLine":3,"endColumn":26},{"ruleId":"71","severity":1,"message":"90","line":3,"column":49,"nodeType":"73","messageId":"74","endLine":3,"endColumn":58},"no-unused-vars","'LocationFinder' is defined but never used.","Identifier","unusedVar","'UncontrolledDropdown' is defined but never used.","'DropdownToggle' is defined but never used.","'DropdownMenu' is defined but never used.","'DropdownItem' is defined but never used.","'NavbarText' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.","'useEffect' is defined but never used.","'Card' is defined but never used.","'Button' is defined but never used.","'CardImg' is defined but never used.","'CardTitle' is defined but never used.","'CardText' is defined but never used.","'CardGroup' is defined but never used.","'CardSubtitle' is defined but never used.","'CardBody' is defined but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'changeTemp' is assigned a value but never used."]
