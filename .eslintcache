[{"C:\\Users\\telch_000\\Desktop\\ElevenFiftyProjects\\project72hour\\src\\index.js":"1","C:\\Users\\telch_000\\Desktop\\ElevenFiftyProjects\\project72hour\\src\\reportWebVitals.js":"2","C:\\Users\\telch_000\\Desktop\\ElevenFiftyProjects\\project72hour\\src\\App.js":"3","C:\\Users\\telch_000\\Desktop\\ElevenFiftyProjects\\project72hour\\src\\TktMaster.jsx":"4","C:\\Users\\telch_000\\Desktop\\ElevenFiftyProjects\\project72hour\\src\\NASAComponents\\LocationFinder.js":"5","C:\\Users\\telch_000\\Desktop\\ElevenFiftyProjects\\project72hour\\src\\NASAComponents\\NASA.js":"6","C:\\Users\\telch_000\\Desktop\\ElevenFiftyProjects\\project72hour\\src\\weather\\WeatherParent.jsx":"7","C:\\Users\\telch_000\\Desktop\\ElevenFiftyProjects\\project72hour\\src\\TktMasterChild.jsx":"8","C:\\Users\\telch_000\\Desktop\\ElevenFiftyProjects\\project72hour\\src\\weather\\WeatherChild.jsx":"9"},{"size":565,"mtime":1629858053955,"results":"10","hashOfConfig":"11"},{"size":375,"mtime":1629858053956,"results":"12","hashOfConfig":"11"},{"size":2182,"mtime":1630160484201,"results":"13","hashOfConfig":"11"},{"size":1399,"mtime":1630162151541,"results":"14","hashOfConfig":"11"},{"size":253,"mtime":1630159218268,"results":"15","hashOfConfig":"11"},{"size":1265,"mtime":1630159218270,"results":"16","hashOfConfig":"11"},{"size":1372,"mtime":1630159218320,"results":"17","hashOfConfig":"11"},{"size":721,"mtime":1630161684753,"results":"18","hashOfConfig":"11"},{"size":1556,"mtime":1630159218318,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"16scl1s",{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"22"},"C:\\Users\\telch_000\\Desktop\\ElevenFiftyProjects\\project72hour\\src\\index.js",[],["43","44"],"C:\\Users\\telch_000\\Desktop\\ElevenFiftyProjects\\project72hour\\src\\reportWebVitals.js",[],"C:\\Users\\telch_000\\Desktop\\ElevenFiftyProjects\\project72hour\\src\\App.js",["45","46","47","48","49","50","51"],"import './App.css';\r\nimport TktMaster from './TktMaster';\r\nimport WeatherParent from './weather/WeatherParent';\r\nimport React, {useState, useEffect} from 'react';\r\nimport LocationFinder from './NASAComponents/LocationFinder';\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  NavbarText,\r\n  Jumbotron\r\n} from 'reactstrap';\r\nimport NASA from './NASAComponents/NASA';\r\n\r\nfunction App() {\r\n  const [position, setposition] = useState({ lat: 0, lon: 0 });\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n\r\n  useEffect(() => {\r\n      navigator.geolocation.getCurrentPosition(success => {\r\n          var lat = success.coords.latitude;\r\n          var lon = success.coords.longitude;\r\n          console.log(lon, lat)\r\n          setposition({lat: lat, lon: lon})\r\n      })\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Navbar color=\"primary\" light expand=\"md\" >\r\n        <NavbarBrand href=\"/\"><h4 className=\"Linktext\">Location</h4></NavbarBrand>\r\n        <NavbarToggler onClick={toggle} />\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <Nav className=\"mr-auto\" navbar>\r\n            <NavItem>\r\n              <NavLink href=\"/components/\"><h4 className=\"Linktext\">Events</h4></NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink href=\"#weather\"><h4 className=\"Linktext\">Weather</h4></NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n        </Collapse>\r\n      </Navbar>\r\n\r\n    <div className=\"Container\">\r\n      <Jumbotron className=\"Jumbotron\">\r\n      </Jumbotron>\r\n    </div>\r\n      \r\n      <div className=\"Body\">\r\n        <img src={require('./images/here.jpg').default} height={400} width={500} className=\"Here\"/>\r\n      \r\n      <div className=\"Weather\" id=\"weather\"></div>\r\n      <TktMaster position={position} />\r\n      <NASA position={position} />\r\n      <WeatherParent position={position} />\r\n      \r\n      </div>\r\n      <footer className=\"Footer\">\r\n        <p>© Project 72 Hours</p>\r\n      </footer>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\telch_000\\Desktop\\ElevenFiftyProjects\\project72hour\\src\\TktMaster.jsx",["52","53","54","55","56","57","58","59","60","61"],"C:\\Users\\telch_000\\Desktop\\ElevenFiftyProjects\\project72hour\\src\\NASAComponents\\LocationFinder.js",["62","63"],"import React, {useState, useEffect} from 'react';\r\nimport NASA from './NASA';\r\n\r\n\r\nconst LocationFinder = (props) => {\r\n    \r\n    return ( \r\n        <div>\r\n            <NASA />\r\n            \r\n        </div>\r\n     );\r\n}\r\n \r\nexport default LocationFinder;","C:\\Users\\telch_000\\Desktop\\ElevenFiftyProjects\\project72hour\\src\\NASAComponents\\NASA.js",["64"],"import React, {useState, useEffect} from 'react';\r\nimport {} from 'reactstrap';\r\n\r\nlet day = new Date();\r\nvar dd = String(day.getDate()).padStart(2, '0');\r\nvar mm = String(day.getMonth() + 1).padStart(2, '0'); \r\nvar yyyy = day.getFullYear();\r\nlet date = `${yyyy}-${mm-1}-${dd}`\r\nconsole.log(date)\r\n\r\nconst NASA = (props) => {\r\n    const [submit, setSubmit] = useState([]);\r\n    \r\n    const key = 'Z7E5A8YqjoP6Gw65BfND2d2jnsypTLPDtQqYLDGs';\r\n    let long = props.position.lon;\r\n    let lat = props.position.lat;\r\n    let url = `https://api.nasa.gov/planetary/earth/assets?lon=${long}&lat=${lat}&date=${date}&api_key=${key}`\r\n    //https://api.nasa.gov/planetary/earth/assets?lon=-86.262860&lat=39.751219&date=2020-08-21&api_key=Z7E5A8YqjoP6Gw65BfND2d2jnsypTLPDtQqYLDGs\r\n    \r\n    \r\n    useEffect(() => {\r\n        const fetchURL = async() => {\r\n            const response = await fetch(url);\r\n            const data = await response.json();\r\n            setSubmit(data.url)\r\n        };\r\n        fetchURL();\r\n    }, [url]);\r\n   \r\n\r\n    return ( \r\n        <div>\r\n                <div className=\"nasaPic\">\r\n                    <img src={submit} style={{width: \"120px\", height: \"200px\"}}></img>\r\n                </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default NASA;","C:\\Users\\telch_000\\Desktop\\ElevenFiftyProjects\\project72hour\\src\\weather\\WeatherParent.jsx",[],"C:\\Users\\telch_000\\Desktop\\ElevenFiftyProjects\\project72hour\\src\\TktMasterChild.jsx",["65","66","67","68","69"],"C:\\Users\\telch_000\\Desktop\\ElevenFiftyProjects\\project72hour\\src\\weather\\WeatherChild.jsx",["70"],"import React, { useState } from 'react';\r\nimport {\r\n  CardText, CardBody,\r\n  CardTitle, CardSubtitle, \r\n} from 'reactstrap';\r\n \r\nconst WeatherChild = (props) => {\r\n    const {temp, feels_like, humidity}=props.temperaturetoday;\r\n    const [newTemperature, setNewTemperature] = useState(false);\r\n    const [getFahrenheit, setGetFahrenheit] = useState(false);\r\n    const convertTemp = () => {\r\n        const temperature = props.temperaturetoday.temp;\r\n        const feelsLike = props.temperaturetoday.feels_like;\r\n        let temperatureFahrenheit = temperature * 1.8 + 32;\r\n        let feelsLikeFahrenheit = feelsLike * 1.8 + 32;\r\n        setNewTemperature (!newTemperature)\r\n        setGetFahrenheit(temperatureFahrenheit);\r\n        console.log(feelsLikeFahrenheit);\r\n    }\r\n    \r\n    // const fahrenheit = () => {\r\n    //   setNewTemperature (!newTemperature)\r\n    // }\r\n\r\n    const changeTemp = () => {\r\n      return <>{getFahrenheit}</>\r\n    }\r\n    \r\n    return ( \r\n        <div>\r\n        \r\n          <button onClick={convertTemp}>Change Temperature</button>\r\n          <CardBody id=\"temp\">{newTemperature ? \"Fahrenheit\" : \"Celsius\"}\r\n            <CardTitle  className=\"text-primary\">Current Temp: {newTemperature ? getFahrenheit : temp }°</CardTitle>\r\n            <CardSubtitle className=\"text-primary\">Feels Like: {newTemperature ? getFahrenheit : feels_like}°</CardSubtitle>\r\n            <CardText className=\"text-primary\">Humidty is {humidity}.</CardText>\r\n          </CardBody>\r\n        \r\n      </div> \r\n     );\r\n}\r\n \r\nexport default WeatherChild;",{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":5,"column":8,"nodeType":"77","messageId":"78","endLine":5,"endColumn":22},{"ruleId":"75","severity":1,"message":"79","line":14,"column":3,"nodeType":"77","messageId":"78","endLine":14,"endColumn":23},{"ruleId":"75","severity":1,"message":"80","line":15,"column":3,"nodeType":"77","messageId":"78","endLine":15,"endColumn":17},{"ruleId":"75","severity":1,"message":"81","line":16,"column":3,"nodeType":"77","messageId":"78","endLine":16,"endColumn":15},{"ruleId":"75","severity":1,"message":"82","line":17,"column":3,"nodeType":"77","messageId":"78","endLine":17,"endColumn":15},{"ruleId":"75","severity":1,"message":"83","line":18,"column":3,"nodeType":"77","messageId":"78","endLine":18,"endColumn":13},{"ruleId":"84","severity":1,"message":"85","line":62,"column":9,"nodeType":"86","endLine":62,"endColumn":100},{"ruleId":"75","severity":1,"message":"87","line":1,"column":27,"nodeType":"77","messageId":"78","endLine":1,"endColumn":36},{"ruleId":"75","severity":1,"message":"88","line":3,"column":5,"nodeType":"77","messageId":"78","endLine":3,"endColumn":9},{"ruleId":"75","severity":1,"message":"89","line":3,"column":11,"nodeType":"77","messageId":"78","endLine":3,"endColumn":17},{"ruleId":"75","severity":1,"message":"90","line":3,"column":19,"nodeType":"77","messageId":"78","endLine":3,"endColumn":26},{"ruleId":"75","severity":1,"message":"91","line":3,"column":28,"nodeType":"77","messageId":"78","endLine":3,"endColumn":37},{"ruleId":"75","severity":1,"message":"92","line":3,"column":39,"nodeType":"77","messageId":"78","endLine":3,"endColumn":47},{"ruleId":"75","severity":1,"message":"93","line":3,"column":49,"nodeType":"77","messageId":"78","endLine":3,"endColumn":58},{"ruleId":"75","severity":1,"message":"94","line":4,"column":5,"nodeType":"77","messageId":"78","endLine":4,"endColumn":17},{"ruleId":"75","severity":1,"message":"95","line":4,"column":19,"nodeType":"77","messageId":"78","endLine":4,"endColumn":27},{"ruleId":"75","severity":1,"message":"96","line":4,"column":44,"nodeType":"77","messageId":"78","endLine":4,"endColumn":47},{"ruleId":"75","severity":1,"message":"97","line":1,"column":16,"nodeType":"77","messageId":"78","endLine":1,"endColumn":24},{"ruleId":"75","severity":1,"message":"87","line":1,"column":26,"nodeType":"77","messageId":"78","endLine":1,"endColumn":35},{"ruleId":"84","severity":1,"message":"85","line":34,"column":21,"nodeType":"86","endLine":34,"endColumn":81},{"ruleId":"75","severity":1,"message":"97","line":1,"column":17,"nodeType":"77","messageId":"78","endLine":1,"endColumn":25},{"ruleId":"75","severity":1,"message":"87","line":1,"column":27,"nodeType":"77","messageId":"78","endLine":1,"endColumn":36},{"ruleId":"75","severity":1,"message":"90","line":3,"column":19,"nodeType":"77","messageId":"78","endLine":3,"endColumn":26},{"ruleId":"75","severity":1,"message":"93","line":3,"column":49,"nodeType":"77","messageId":"78","endLine":3,"endColumn":58},{"ruleId":"75","severity":1,"message":"96","line":4,"column":29,"nodeType":"77","messageId":"78","endLine":4,"endColumn":32},{"ruleId":"75","severity":1,"message":"98","line":25,"column":11,"nodeType":"77","messageId":"78","endLine":25,"endColumn":21},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"no-unused-vars","'LocationFinder' is defined but never used.","Identifier","unusedVar","'UncontrolledDropdown' is defined but never used.","'DropdownToggle' is defined but never used.","'DropdownMenu' is defined but never used.","'DropdownItem' is defined but never used.","'NavbarText' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useEffect' is defined but never used.","'Card' is defined but never used.","'Button' is defined but never used.","'CardImg' is defined but never used.","'CardTitle' is defined but never used.","'CardText' is defined but never used.","'CardGroup' is defined but never used.","'CardSubtitle' is defined but never used.","'CardBody' is defined but never used.","'Col' is defined but never used.","'useState' is defined but never used.","'changeTemp' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]